{
	"name": "lab13",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dados_anuais_wildcard",
						"type": "DatasetReference"
					},
					"name": "dadosAnuais"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "saida_lab",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "anoMes"
				},
				{
					"name": "select1"
				},
				{
					"name": "minMax"
				},
				{
					"name": "flgMinMax"
				},
				{
					"name": "mediaMovel"
				},
				{
					"name": "mediaDif"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          cnpj as string,",
				"          nome_empresa as string,",
				"          nr_nota as string,",
				"          dt_emissao as date,",
				"          valor as double,",
				"          municipio as string,",
				"          estado as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dadosAnuais",
				"dadosAnuais derive(ano_mes = toString(dt_emissao, 'yyyyMM')) ~> anoMes",
				"anoMes select(mapColumn(",
				"          cnpj,",
				"          dt_emissao,",
				"          valor,",
				"          ano_mes",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 window(over(cnpj,",
				"          ano_mes),",
				"     asc(dt_emissao, true),",
				"     rangeSpecified: true,",
				"     menor_valor = min(valor),",
				"          maior_valor = max(valor)) ~> minMax",
				"minMax derive(flg_menor = case(valor == menor_valor, 'True', 'False'),",
				"          flg_maior = case(valor == maior_valor, 'True', 'False')) ~> flgMinMax",
				"flgMinMax window(over(cnpj),",
				"     asc(dt_emissao, true),",
				"     rangeSpecified: true,",
				"     startRowOffset: -5L,",
				"     endRowOffset: 0L,",
				"     media_ultimas = avg(valor)) ~> mediaMovel",
				"mediaMovel derive(mediaDif = valor - media_ultimas) ~> mediaDif",
				"mediaDif select(mapColumn(",
				"          cnpj,",
				"          dt_emissao,",
				"          valor,",
				"          flg_menor,",
				"          flg_maior,",
				"          mediaDif",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['lab13.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}